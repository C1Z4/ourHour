name: CI

on:
  push:
    branches: ["main", "develop"] # main, develop 브랜치에 푸시될 때 동작
  pull_request:
    branches: ["main", "develop"] # PR 생성/업데이트 시 동작

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Backend 빌드
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        working-directory: ./backend

      - name: Create application-secret.yml
        run: |
          mkdir -p ./backend/src/main/resources
          echo "spring:" > ./backend/src/main/resources/application-secret.yml
          echo "  datasource:" >> ./backend/src/main/resources/application-secret.yml
          echo "    url: '${{ secrets.DB_URL }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    username: '${{ secrets.DB_USERNAME }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    password: '${{ secrets.DB_PASSWORD }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    driver-class-name: com.mysql.cj.jdbc.Driver" >> ./backend/src/main/resources/application-secret.yml
          echo "  mail:" >> ./backend/src/main/resources/application-secret.yml
          echo "    from: '${{ secrets.MAIL_FROM }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    host: '${{ secrets.MAIL_HOST }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    port: '${{ secrets.MAIL_PORT }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    username: '${{ secrets.MAIL_USERNAME }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    password: '${{ secrets.MAIL_PASSWORD }}'" >> ./backend/src/main/resources/application-secret.yml
          echo "    properties:" >> ./backend/src/main/resources/application-secret.yml
          echo "      mail:" >> ./backend/src/main/resources/application-secret.yml
          echo "        smtp:" >> ./backend/src/main/resources/application-secret.yml
          echo "          auth: true" >> ./backend/src/main/resources/application-secret.yml
          echo "          starttls:" >> ./backend/src/main/resources/application-secret.yml
          echo "            enable: true" >> ./backend/src/main/resources/application-secret.yml
          echo "  service:" >> ./backend/src/main/resources/application-secret.yml
          echo "    base-url-email: '${{ secrets.BASE_URL_EMAIL }}'" >> ./backend/src/main/resources/application-secret.yml

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon
        working-directory: ./backend

      # Frontend 빌드
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run code quality checks
        run: |
          npm run lint &
          npm run format:check &
          wait
        working-directory: ./frontend

      - name: Run tests
        run: npm run coverage
        working-directory: ./frontend

      - name: Build project
        run: npm run build
        working-directory: ./frontend

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: ./frontend/dist/