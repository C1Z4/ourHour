services:
  # backend
  backend:
    image: ${BACKEND_IMAGE:-ourhour-backend:test}
    container_name: test-backend
    environment:
      SPRING_PROFILES_ACTIVE: test
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  # db
  db:
    image: mysql:8.0
    container_name: test-db
    ports:
      - "3307:3306"
    environment:
      SPRING_PROFILES_ACTIVE: test
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 60s
      retries: 10
    volumes:
      - ./backend/docker/mysql-init:/docker-entrypoint-initdb.d
      - test-mysql-data:/var/lib/mysql

  # prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    restart: always
    networks:
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
      - ./monitoring/grafana/dashboards/:/etc/grafana/dashboards/
    depends_on:
      - prometheus
    restart: always
    networks:
      - default

  # node-exporter
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    networks:
      - default

  # mysqld-exporter
  mysqld-exporter:
    image: prom/mysqld-exporter:v0.15.1
    container_name: mysqld-exporter
    depends_on:
      - db
    networks:
      - default
    command:
      - "--mysqld.username=$MYSQL_USER:$MYSQL_PASSWORD"
      - "--mysqld.address=db:3306"
      - "--no-collect.slave_status"

volumes:
  test-mysql-data: