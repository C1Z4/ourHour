services:
  # backend
  backend:
    build:
      context: ./backend
      target: dev
    container_name: dev-backend
    working_dir: /app
    # 두 프로세스 모두 gradlew 사용 + 캐시 디렉터리 분리
    command: >
      sh -lc "
      ./gradlew -Dorg.gradle.vfs.watch=false classes --continuous -x test --no-daemon --project-cache-dir=/tmp/continuous-cache &
      ./gradlew -Dorg.gradle.vfs.watch=false bootRun -x test --no-daemon --project-cache-dir=/tmp/bootrun-cache
      "
    env_file:
      - ./backend/.env
    environment:
      SPRING_PROFILES_ACTIVE: dev
      JAVA_TOOL_OPTIONS: "-Dspring.devtools.restart.poll-interval=2s -Dspring.devtools.restart.quiet-period=1s"
    volumes:
      - ./backend:/app # 코드만 바인드
      - gradle-cache:/home/gradle/.gradle
      - build-cache:/app/build # 빌드 산출물은 볼륨
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default

  # db
  db:
    image: mysql:8
    container_name: dev-db
    ports:
      - "3307:3306"
    env_file:
      - ./backend/.env
    environment:
      SPRING_PROFILES_ACTIVE: dev
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 60s
      retries: 10
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - default

  # prometheus
  prometheus:
    image: prom/prometheus

    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    restart: always
    networks:
      - default

    extra_hosts:
      - "host.docker.internal:host-gateway"

  # grafana
  grafana:

    image: grafana/grafana

    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
      - ./monitoring/grafana/dashboards/:/etc/grafana/dashboards/

    depends_on:
      - prometheus
    restart: always
    networks:
      - default

  # node-exporter
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    networks:
      - default

  # mysqld-exporter
  mysqld-exporter:
    image: prom/mysqld-exporter:v0.15.1
    container_name: mysqld-exporter
    ports:
      - "9104:9104"
    depends_on:
      - db
    networks:
      - default
    env_file:
      - .env
    command:
      - "--mysqld.username=$DB_USERNAME:$DB_PASSWORD"
      - "--mysqld.address=db:3306"
      - "--no-collect.slave_status"

  redis:
    image: redis:7-alpine
    container_name: ourhour-dev-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass devpassword123
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  gradle-cache:
  build-cache:
  mysql-data:
  redis_data:

networks:
  default:
    name: monitoring-net

